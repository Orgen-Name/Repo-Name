<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.backInfo.backInfoMapper">
	<select id="getbackInfoCount" resultType="Integer">
		SELECT COUNT(1) FROM app_info a
		<trim prefix="where" prefixOverrides="and | or">
			<if test="softwareName != null and softwareName != ''">
				and a.softwareName like CONCAT ('%',#{softwareName},'%')
			</if>
			<if test="categoryLevel1 != 0">
				and a.categoryLevel1 = #{categoryLevel1}
			</if>
			<if test="categoryLevel2 != 0">
				and a.categoryLevel2 = #{categoryLevel2}
			</if>
			<if test="categoryLevel3 != 0">
				and a.categoryLevel3 = #{categoryLevel3}
			</if>
			<if test="flatformId != 0">
				and a.flatformId = #{flatformId}
			</if>
		</trim>
	</select>

	<select id="getbackInfoList" resultType="App_info">
		select a.id,
		a.softwareName,a.APKName,a.supportROM,a.softwareSize,a.devId,
		(select
		devName from dev_user where id = a.devId) as devName,
		a.status,
		(select
		valueName from data_dictionary d where a.status=d.valueId AND
		d.typeCode='APP_STATUS') as statusName,
		a.flatformId,
		(select valueName
		from data_dictionary d where a.flatformId=d.valueId AND
		d.typeCode='APP_FLATFORM') as flatformName,
		a.categoryLevel1,
		(select
		categoryName from app_category c where c.id=a.categoryLevel1) as
		categoryLevel1Name,
		a.categoryLevel2,
		(select categoryName from
		app_category c where c.id=a.categoryLevel2) as
		categoryLevel2Name,
		a.categoryLevel3,
		(select categoryName from app_category c where
		c.id=a.categoryLevel3) as
		categoryLevel3Name,
		a.downloads,
		a.onSaleDate,
		a.versionId,
		(select v.versionNo from app_version v where
		v.id=a.versionId ) as versionNo
		from app_info a
		<trim prefix="where" prefixOverrides="and | or">
			<if test="softwareName != null and softwareName != ''">
				and a.softwareName like CONCAT ('%',#{softwareName},'%')
			</if>
			<if test="categoryLevel1 != 0">
				and a.categoryLevel1 = #{categoryLevel1}
			</if>
			<if test="categoryLevel2 != 0">
				and a.categoryLevel2 = #{categoryLevel2}
			</if>
			<if test="categoryLevel3 != 0">
				and a.categoryLevel3 = #{categoryLevel3}
			</if>
			<if test="flatformId != 0">
				and a.flatformId = #{flatformId}
			</if>
		</trim>
		limit #{currentPageNo},#{pageSize}
	</select>
	<select id="getbackInfo" resultType="App_category">
		select id,categoryCode,categoryName from app_category
		<trim prefix="where" prefixOverrides="and | or">
			<if test="parentId != null">
				and parentId = #{parentId}
			</if>
			<if test="parentId == null">
				and parentId is null
			</if>
		</trim>
	</select>
	<select id="Selectquery" resultType="App_category">
		select * from app_category
		where parentId is null
	</select>
	<select id="selectValueName" resultType="Data_dictionary">
		select * from
		data_dictionary WHERE typeCode = "APP_FLATFORM"
	</select>
	<select id="getbackInfoView" resultType="App_info">
		select a.id,
		a.interfaceLanguage,a.logoPicPath,a.appInfo
		,a.softwareName,a.APKName,a.supportROM,a.softwareSize,a.devId,
		(select
		devName from dev_user where id = a.devId) as devName,
		a.status,
		(select
		valueName from data_dictionary d where a.status=d.valueId AND
		d.typeCode='APP_STATUS') as statusName,
		a.flatformId,
		(select valueName
		from data_dictionary d where a.flatformId=d.valueId AND
		d.typeCode='APP_FLATFORM') as flatformName,
		a.categoryLevel1,
		(select
		categoryName from app_category c where c.id=a.categoryLevel1) as
		categoryLevel1Name,
		a.categoryLevel2,
		(select categoryName from
		app_category c where c.id=a.categoryLevel2) as
		categoryLevel2Name,
		a.categoryLevel3,
		(select categoryName from app_category c where
		c.id=a.categoryLevel3) as
		categoryLevel3Name,
		a.downloads,
		a.onSaleDate,
		a.versionId,
		(select v.versionNo from app_version v where
		v.id=a.versionId ) as versionNo
		from app_info a
		WHERE a.id=#{id}
	</select>
	<select id="selectSnippetView" resultType="App_vorsion">
		SELECT * FROM
		app_version WHERE id=#{id}
	</select>
	<update id="updatestatus">
		UPDATE app_info SET status=#{status} WHERE id=#{id}
	</update>
</mapper>